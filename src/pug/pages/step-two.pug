extends ../layout.pug

block content
    include ../components/card.pug
    include ../components/text-input.pug
    include ../components/button.pug
    include ../icons/caretLeft.pug
    include ../icons/icon-ok.pug

    .main
        .header-first.header-first__not-mobile.js-header-first
            .header-first__title.js-header-first-title Покупка сертификата
            .header-first__text.js-header-first-text Вишня, м. Новокузнецкая
        .header-second
            button.header-second__back-button(type='button')
                +caretLeft('header-second__back-icon')
            .header-second__title Ваши данные
            .header-second__steps Шаг 2 из 
                span.js-step-two-last-step 5

        .steps.steps_columns
            .cards.cards_single
                +card({name: 'Название сертификата длинным названием', price: '2 000', status: 'Действует 365 дней после активации', address: 'Вишня, м. Новокузнецкая', description: 'Условия где и на что может использоваться', className: 'default-color'})

            form
                .step
                    .step__tabs.tabs.js-tabs
                        button.tabs__button.active.js-tab-button.js-step-two-tab(type='button', data-type="present") Купить в подарок
                        button.tabs__button.js-tab-button.js-step-two-tab(type='button', data-type="self") Купить для себя
                    +text-input({label: 'Телефон', type: 'tel', subText: 'Чек о покупке придёт в WhatsApp или SMS', name: 'inputPhone', classNameSubText: 'js-input-tel-sub-text'})
                    +text-input({label: 'Имя', name: 'inputSenderName', className: 'hidden js-two-step-input-name'})
                    .checkbox-wrapper
                        .checkbox
                            input(type="checkbox" id='agree-checkbox')
                            .checkbox__label-wrapper
                                label.checkbox__label(for='agree-checkbox') Я соглашаюсь с условиями 
                                    +icon-ok('checkbox__icon-ok')
                                a.checkbox__link(href="#") Пользовательского соглашения

                    .button-wrapper
                        +button({text: 'Далее', className: 'button-wrapper__button'})
    script.
        (() => {
            const tabButtons = document.querySelectorAll('.js-step-two-tab');

            tabButtons.forEach((button) => {
                button.addEventListener('click', () => {
                    setActiveTab(button);
                    const buttonType = button.dataset.type;

                    if (buttonType) {
                        changeInputTelSubText(buttonType);
                        inputNameShowToggle(buttonType);
                        changeLastStep(buttonType);
                    }
                });
            });

            function changeInputTelSubText(type) {
                const inputTelSubText = document.querySelector('.js-input-tel-sub-text');

                if (type === 'self' && inputTelSubText) {
                    inputTelSubText.innerHTML = 'Ссылка на сертификат и чек о покупке придёт в WhatsApp или SMS';
                }

                if (type === 'present' && inputTelSubText) {
                    inputTelSubText.innerHTML = 'Чек о покупке придёт в WhatsApp или SMS';
                }
            }

            function inputNameShowToggle(type) {
                const inputName = document.querySelector('.js-two-step-input-name');

                if (type === 'self' && inputName) {
                    inputName.classList.remove('hidden');
                }

                if (type === 'present' && inputName) {
                    inputName.classList.add('hidden');
                }
            }

            function changeLastStep(type) {
                const lastStep = document.querySelector('.js-step-two-last-step');

                if (type === 'self' && lastStep) {
                    lastStep.innerHTML = '3';
                }

                if (type === 'present' && lastStep) {
                    lastStep.innerHTML = '5';
                }
            }

            function setActiveTab(activeTab) {
                tabButtons.forEach((tab) => {
                    tab.classList.remove('active');
                });

                activeTab.classList.add('active');
            }
        })();
