{"version":3,"sources":["design.js","form-.js","inputs.js","phoneInput.js","result-present.js","step-four.js","step-two.js","tabs-bg.js","tabs.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACngBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["(() => {\n    const ACTIVE_CLASS = 'active';\n\n    const bgButtons = document.querySelectorAll('.js-bg-tab-button');\n    const cardBgs = document.querySelectorAll('.js-card-bg');\n    const buttonLeft = document.querySelector('.js-card-button-left');\n    const buttonRight = document.querySelector('.js-card-button-right');\n    const cardImgs = document.querySelectorAll('.js-card-img');\n\n    bgButtons.forEach((button) => {\n        button.addEventListener('click', handleBgButtonClick);\n    });\n\n    buttonLeft?.addEventListener('click', handleButtonLeftClick);\n    buttonRight?.addEventListener('click', handleButtonRightClick);\n\n    function handleBgButtonClick(event) {\n        const button = event.currentTarget;\n        const buttonType = button.dataset.type;\n\n        cardBgs.forEach((card) => {\n            const cardType = card.dataset.type;\n\n            if (buttonType && buttonType === cardType) {\n                card.classList.add(ACTIVE_CLASS);\n            } else {\n                card.classList.remove(ACTIVE_CLASS);\n            }\n        });\n    }\n\n    function handleButtonLeftClick() {\n        let currentIndexImg = 0;\n\n        cardImgs.forEach((img, index) => {\n            if (img.classList.contains(ACTIVE_CLASS)) {\n                currentIndexImg = index;\n            }\n\n            img.classList.remove(ACTIVE_CLASS);\n        });\n\n        if (currentIndexImg === 0) {\n            cardImgs[cardImgs.length - 1].classList.add(ACTIVE_CLASS);\n        } else {\n            cardImgs[currentIndexImg - 1].classList.add(ACTIVE_CLASS);\n        }\n    }\n\n    function handleButtonRightClick() {\n        let currentIndexImg = 0;\n\n        cardImgs.forEach((img, index) => {\n            if (img.classList.contains(ACTIVE_CLASS)) {\n                currentIndexImg = index;\n            }\n\n            img.classList.remove(ACTIVE_CLASS);\n        });\n\n        if (currentIndexImg === cardImgs.length - 1) {\n            cardImgs[0].classList.add(ACTIVE_CLASS);\n        } else {\n            cardImgs[currentIndexImg + 1].classList.add(ACTIVE_CLASS);\n        }\n    }\n})();\n","(() => {\n    async function payment(state, payButton) {\n        payButton.disabled = true;\n\n        // Тут нужна логика оплаты, данные формы в state\n        // После того как она отработает нужно получить эти данные:\n        const response = {\n            id: '675486129',\n            using: 'Любые услуги и товары салона',\n            dateTo: '20.11.2025',\n        };\n\n        openResultStep(response);\n\n        payButton.disabled = false;\n    }\n\n    const CLASS_HIDDEN = 'hidden';\n    const CLASS_SELECTED = 'selected';\n    const CLASS_CARD_INTERACTIVE = 'interactive';\n    const ACTIVE_CLASS = 'active';\n\n    const HEADER_TITLE = {\n        First: 'Выберите сертификат',\n        Second: 'Ваши данные',\n        Third: 'Оплата',\n        ThirdAfterPayed: 'Спасибо за покупку',\n        Fourth: 'Дизайн и получатель',\n        Fives: 'Проверка данных',\n    };\n\n    const BUTTON_TEXT = {\n        Second: 'Далее',\n        Third: 'Оплатить',\n        ThirdPayed: 'Выбрать дизайн и получателя',\n        Fourth: 'Далее',\n        Fives: 'Отправить',\n        End: 'Записаться онлайн',\n    };\n\n    const ORDER_TYPE = {\n        Self: 'self',\n        Present: 'present',\n    };\n\n    const formState = {\n        currentStep: 1,\n        selectedCard: null,\n        orderType: ORDER_TYPE.Present,\n        phone: '',\n        agreement: false,\n        senderName: '',\n        recipientName: '',\n        designBack: '',\n        designImage: '',\n    };\n\n    const stateHandler = {\n        set(target, property, value) {\n            const prevValue = target[property];\n\n            if (property === 'currentStep') {\n                handleStepChange(value, prevValue, target);\n            }\n\n            if (property === 'selectedCard') {\n                handleSelectedCardChange(value, prevValue, target);\n            }\n\n            if (property === 'orderType') {\n                handleOrderTypeChange(value);\n            }\n\n            target[property] = value;\n\n            validateStepButton();\n\n            return true;\n        },\n    };\n\n    const observedState = new Proxy(formState, stateHandler);\n\n    const headerFirst = document.querySelector('.js-header-first');\n    const headerSecond = document.querySelector('.js-header-second');\n    const stepTwo = document.querySelector('.js-step-two');\n    const stepThree = document.querySelector('.js-step-three');\n    const stepFour = document.querySelector('.js-step-four');\n    const stepFive = document.querySelector('.js-step-five');\n    const headerTitle = headerSecond?.querySelector('.js-header-title');\n    const backButton = headerSecond?.querySelector('.js-back-button');\n    const currentStep = headerSecond?.querySelector('.js-current-step');\n    const lastStep = headerSecond?.querySelector('.js-last-step');\n    const stepButton = document.querySelector('.js-step-button');\n    const inputSenderName = document.querySelector('.js-input-sender-name');\n    const agreeCheckbox = document.querySelector('.js-agree-checkbox');\n\n    const cards = document.querySelectorAll('.js-card');\n\n    cards.forEach((card) => {\n        card.addEventListener('click', handleCardClick);\n    });\n\n    backButton?.addEventListener('click', handleBackClick);\n\n    function handleCardClick(event) {\n        const card = event.currentTarget;\n\n        if (card.classList.contains(CLASS_CARD_INTERACTIVE)) {\n            observedState.selectedCard = card;\n            observedState.currentStep = 2;\n        }\n    }\n\n    function handleBackClick() {\n        observedState.currentStep -= 1;\n\n        if (observedState.currentStep === 1) {\n            observedState.selectedCard = null;\n        }\n    }\n\n    function handleStepChange(value, prevValue, target) {\n        if (currentStep) {\n            currentStep.innerHTML = `${value}`;\n        }\n\n        changeHeader(value, prevValue);\n        changeCards(value, prevValue);\n        changeSteps(value, prevValue);\n        showTel(value, prevValue);\n        showName(value, prevValue);\n        changeStepButton(value);\n    }\n\n    function changeHeader(value, prevValue) {\n        switch (prevValue) {\n            case 1:\n                headerFirst?.classList.add(CLASS_HIDDEN);\n                headerSecond?.classList.add(CLASS_SELECTED);\n                break;\n        }\n\n        switch (value) {\n            case 1: {\n                headerFirst?.classList.remove(CLASS_HIDDEN);\n                headerSecond?.classList.remove(CLASS_SELECTED);\n\n                if (headerTitle) {\n                    headerTitle.innerHTML = HEADER_TITLE.First;\n                }\n\n                break;\n            }\n            case 2: {\n                if (headerTitle) {\n                    headerTitle.innerHTML = HEADER_TITLE.Second;\n                }\n\n                break;\n            }\n            case 3: {\n                if (headerTitle) {\n                    if (observedState.hasPayed) {\n                        headerTitle.innerHTML = HEADER_TITLE.ThirdAfterPayed;\n                    } else {\n                        headerTitle.innerHTML = HEADER_TITLE.Third;\n                    }\n                }\n\n                break;\n            }\n            case 4:\n                if (headerTitle) {\n                    headerTitle.innerHTML = HEADER_TITLE.Fourth;\n                }\n\n                break;\n            case 5:\n                if (headerTitle) {\n                    headerTitle.innerHTML = HEADER_TITLE.Fives;\n                }\n\n                break;\n        }\n    }\n\n    function changeCards(value, prevValue) {\n        switch (prevValue) {\n            case 1: {\n                cards.forEach((card) => {\n                    if (\n                        card.dataset.id !==\n                        observedState.selectedCard?.dataset.id\n                    ) {\n                        card.classList.add(CLASS_HIDDEN);\n                    }\n                });\n\n                break;\n            }\n            case 2: {\n                if (value === 1) {\n                    cards.forEach((card) => {\n                        card.classList.remove(CLASS_HIDDEN);\n                    });\n                }\n\n                break;\n            }\n        }\n    }\n\n    function changeSteps(value) {\n        stepTwo?.classList.add(CLASS_HIDDEN);\n        stepThree?.classList.add(CLASS_HIDDEN);\n        stepFour?.classList.add(CLASS_HIDDEN);\n        stepFive?.classList.add(CLASS_HIDDEN);\n\n        switch (value) {\n            case 2:\n                stepTwo?.classList.remove(CLASS_HIDDEN);\n                break;\n            case 3:\n                stepThree?.classList.remove(CLASS_HIDDEN);\n                break;\n            case 4:\n                stepFour?.classList.remove(CLASS_HIDDEN);\n                break;\n            case 5:\n                stepFive?.classList.remove(CLASS_HIDDEN);\n                break;\n        }\n    }\n\n    function showTel(value) {\n        const selfLabel = document.querySelector(\n            '.js-card-content-label-tel-self'\n        );\n        const presentLabel = document.querySelector(\n            '.js-card-content-label-tel-present'\n        );\n        const telNode = document.querySelector('.js-card-content-tel');\n\n        selfLabel?.classList.add(CLASS_HIDDEN);\n        presentLabel?.classList.add(CLASS_HIDDEN);\n\n        if (value === 3) {\n            if (telNode) {\n                telNode.innerHTML = observedState.phone;\n            }\n\n            if (observedState.orderType === ORDER_TYPE.Present) {\n                presentLabel?.classList.remove(CLASS_HIDDEN);\n            }\n\n            if (observedState.orderType === ORDER_TYPE.Self) {\n                selfLabel?.classList.remove(CLASS_HIDDEN);\n            }\n        }\n    }\n\n    function showName(value) {\n        const contentName = document.querySelector('.js-card-content-name');\n        const nameNode = document.querySelector('.js-card-content-name-text');\n\n        contentName?.classList.add(CLASS_HIDDEN);\n\n        if (value === 3) {\n            if (nameNode) {\n                nameNode.innerHTML = observedState.senderName;\n            }\n\n            if (observedState.orderType === ORDER_TYPE.Self) {\n                contentName?.classList.remove(CLASS_HIDDEN);\n            }\n        }\n    }\n\n    function changeStepButton(step) {\n        if (!stepButton) return;\n\n        stepButton.classList.remove(CLASS_HIDDEN);\n\n        switch (step) {\n            case 1:\n                stepButton.classList.add(CLASS_HIDDEN);\n                stepButton.innerHTML = BUTTON_TEXT.Second;\n                break;\n            case 2:\n                stepButton.innerHTML = BUTTON_TEXT.Second;\n                break;\n            case 3: {\n                const price =\n                    observedState.selectedCard?.querySelector('.js-card-price')\n                        ?.innerHTML ?? '';\n                stepButton.innerHTML = BUTTON_TEXT.Third + ' ' + price;\n                break;\n            }\n            case 4:\n                stepButton.innerHTML = BUTTON_TEXT.Fourth;\n                break;\n            case 5:\n                stepButton.innerHTML = BUTTON_TEXT.Fives;\n                break;\n        }\n    }\n\n    function handleSelectedCardChange(value, prevValue, target) {\n        cards.forEach((card) => {\n            if (value) {\n                card.classList.remove(CLASS_CARD_INTERACTIVE);\n            } else {\n                card.classList.add(CLASS_CARD_INTERACTIVE);\n            }\n        });\n    }\n\n    function handleOrderTypeChange(value) {\n        const INPUT_SUB_TEXT = {\n            [ORDER_TYPE.Self]:\n                'Ссылка на сертификат и чек о покупке придёт в WhatsApp или SMS',\n            [ORDER_TYPE.Present]: 'Чек о покупке придёт в WhatsApp или SMS',\n        };\n\n        const nameSubText = document.querySelector(\n            '.js-input-sender-name-sub-text'\n        );\n\n        if (nameSubText) {\n            nameSubText.innerHTML = INPUT_SUB_TEXT[value];\n        }\n\n        switch (value) {\n            case ORDER_TYPE.Self:\n                inputSenderName?.classList.remove(CLASS_HIDDEN);\n                lastStep.innerHTML = 3;\n                break;\n            case ORDER_TYPE.Present:\n                inputSenderName?.classList.add(CLASS_HIDDEN);\n                lastStep.innerHTML = 5;\n                break;\n        }\n    }\n\n    function validateStepButton() {\n        if (!stepButton) return;\n\n        const hasValid = observedState.phone !== '' && observedState.agreement;\n\n        stepButton.disabled = !hasValid;\n    }\n\n    function openResultStep(responseData) {\n        const headerTitle = headerFirst?.querySelector(\n            '.js-header-first-title'\n        );\n        const headerText = headerFirst?.querySelector('.js-header-first-text');\n\n        const resultStep = document.querySelector('.js-step-result');\n        const resultId = resultStep?.querySelector('.js-card-result-id');\n        const resultAddress = resultStep?.querySelector(\n            '.js-card-result-address'\n        );\n        const resultUsed = resultStep?.querySelector('.js-card-result-used');\n        const resultDateTo = resultStep?.querySelector(\n            '.js-card-result-date-to'\n        );\n        const resultName = resultStep?.querySelector('.js-card-result-name');\n        const resultTel = resultStep?.querySelector('.js-card-result-tel');\n\n        headerFirst?.classList.remove(CLASS_HIDDEN);\n        headerSecond?.classList.add(CLASS_HIDDEN);\n\n        const address =\n            observedState.selectedCard?.querySelector('.js-card-address')\n                ?.innerHTML ?? '';\n\n        if (headerTitle && headerText) {\n            headerTitle.innerHTML = `Сертификат ${responseData.id}`;\n            headerText.innerHTML = address;\n        }\n\n        if (stepButton) {\n            stepButton.innerHTML = BUTTON_TEXT.End;\n        }\n\n        if (resultStep) {\n            stepTwo?.classList.add(CLASS_HIDDEN);\n            stepThree?.classList.add(CLASS_HIDDEN);\n            stepFour?.classList.add(CLASS_HIDDEN);\n            stepFive?.classList.add(CLASS_HIDDEN);\n\n            resultStep.classList.remove(CLASS_HIDDEN);\n\n            if (resultId) {\n                resultId.innerHTML = responseData.id;\n            }\n\n            if (resultAddress) {\n                resultAddress.innerHTML = address;\n            }\n\n            if (resultUsed) {\n                resultUsed.innerHTML = responseData.using;\n            }\n\n            if (resultDateTo) {\n                resultDateTo.innerHTML = responseData.dateTo;\n            }\n\n            if (resultName && observedState.senderName) {\n                resultName.innerHTML = observedState.senderName;\n            }\n\n            if (resultTel && observedState.phone) {\n                resultTel.innerHTML = observedState.phone;\n            }\n        }\n    }\n\n    // TABS\n    // const tabsBlocks = document.querySelectorAll('.js-tabs');\n\n    // tabsBlocks.forEach((tabs) => {\n    //     const buttons = tabs.querySelectorAll('.js-tab-button');\n\n    //     buttons.forEach((button) => {\n    //         button.addEventListener('click', () => {\n    //             const buttonType = button.dataset.type;\n\n    //             resetButtons();\n    //             button.classList.add('active');\n\n    //             if (buttonType) {\n    //                 observedState.orderType = buttonType;\n    //             }\n    //         });\n    //     });\n\n    //     function resetButtons() {\n    //         buttons.forEach((button) => {\n    //             button.classList.remove('active');\n    //         });\n    //     }\n    // });\n\n    // INPUTS\n    const INPUT_NAMES = {\n        SenderName: 'inputSenderName',\n        RecipientName: 'inputRecipientName',\n        Phone: 'inputPhone',\n    };\n    const nodes = document.querySelectorAll('.js-text-input-node');\n\n    // nodes.forEach((node) => {\n    //     const input = node.querySelector('.js-text-input');\n    //     const reset = node.querySelector('.js-text-input-reset');\n    //     const alert = node.querySelector('.js-text-input-alert');\n\n    //     if (input.value !== '') {\n    //         reset?.classList.add(ACTIVE_CLASS);\n    //     }\n\n    //     input?.addEventListener('blur', (event) => {\n    //         if (event.target.value === '') {\n    //             alert?.classList.add(ACTIVE_CLASS);\n    //         } else {\n    //             alert?.classList.remove(ACTIVE_CLASS);\n    //         }\n    //     });\n\n    //     input?.addEventListener('input', (event) => {\n    //         if (event.target.value === '') {\n    //             reset?.classList.remove(ACTIVE_CLASS);\n    //         } else {\n    //             reset?.classList.add(ACTIVE_CLASS);\n    //             alert?.classList.remove(ACTIVE_CLASS);\n    //         }\n\n    //         switch (input.name) {\n    //             case INPUT_NAMES.Phone:\n    //                 observedState.phone = event.target.value;\n    //                 break;\n    //             case INPUT_NAMES.SenderName:\n    //                 observedState.senderName = event.target.value;\n    //                 break;\n    //             case INPUT_NAMES.RecipientName:\n    //                 observedState.recipientName = event.target.value;\n    //                 break;\n    //         }\n    //     });\n\n    //     reset?.addEventListener('click', () => {\n    //         if (input) {\n    //             input.value = '';\n    //             observedState.phone = '';\n    //             reset?.classList.remove(ACTIVE_CLASS);\n    //         }\n    //     });\n    // });\n\n    // TOGGLES\n    agreeCheckbox?.addEventListener('input', () => {\n        observedState.agreement = agreeCheckbox.checked;\n    });\n\n    // STEP BUTTON\n    stepButton?.addEventListener('click', () => {\n        if (\n            observedState.currentStep === 5 ||\n            (observedState.currentStep === 3 &&\n                observedState.orderType === ORDER_TYPE.Self)\n        ) {\n            payment(observedState, stepButton);\n            return;\n        }\n\n        if (observedState.currentStep < 5) {\n            observedState.currentStep += 1;\n        }\n    });\n})();\n","(() => {\n    const ACTIVE_CLASS = 'active';\n\n    const nodes = document.querySelectorAll('.js-text-input-node');\n\n    nodes.forEach((node) => {\n        const input = node.querySelector('.js-text-input');\n        const reset = node.querySelector('.js-text-input-reset');\n        const alert = node.querySelector('.js-text-input-alert');\n\n        if (input.value !== '') {\n            reset?.classList.add(ACTIVE_CLASS);\n        }\n\n        input?.addEventListener('blur', (event) => {\n            if (event.target.value === '') {\n                alert?.classList.add(ACTIVE_CLASS);\n            } else {\n                alert?.classList.remove(ACTIVE_CLASS);\n            }\n        });\n\n        input?.addEventListener('input', (event) => {\n            if (event.target.value === '') {\n                reset?.classList.remove(ACTIVE_CLASS);\n            } else {\n                reset?.classList.add(ACTIVE_CLASS);\n                alert?.classList.remove(ACTIVE_CLASS);\n            }\n\n            // switch (input.name) {\n            //     case INPUT_NAMES.Phone:\n            //         observedState.phone = event.target.value;\n            //         break;\n            //     case INPUT_NAMES.SenderName:\n            //         observedState.senderName = event.target.value;\n            //         break;\n            //     case INPUT_NAMES.RecipientName:\n            //         observedState.recipientName = event.target.value;\n            //         break;\n            // }\n        });\n\n        reset?.addEventListener('click', () => {\n            if (input) {\n                input.value = '';\n                // observedState.phone = '';\n                reset?.classList.remove(ACTIVE_CLASS);\n            }\n        });\n    });\n})();\n","(() => {\n    const inputs = document.querySelectorAll('.js-input[type=\"tel\"]');\n\n    inputs.forEach((input) => {\n        input.addEventListener('input', (e) => {\n            let value = e.target.value.replace(/\\D/g, ''); // Удаляем все нецифровые символы\n            const template = '+7 (___) ___-__-__';\n\n            let formattedValue = template;\n            for (let i = 0; i < value.length; i++) {\n                formattedValue = formattedValue.replace('_', value[i]);\n            }\n\n            e.target.value = formattedValue.replace(/_+/g, ''); // Удаляем лишние подчеркивания\n        });\n\n        input.addEventListener('blur', (e) => {\n            if (e.target.value.length < 18) {\n                e.target.value = ''; // Очищаем поле, если данные неполные\n            }\n        });\n    });\n})();\n","(() => {\n    const CLASS_HIDDEN = 'hidden';\n\n    const addingButton = document.querySelector(\n        '.js-result-present-add-button'\n    );\n    const addingInputs = document.querySelectorAll(\n        '.js-result-present-adding-content'\n    );\n    const buttonShowText = document.querySelector(\n        '.js-result-present-add-button-show-text'\n    );\n    const buttonHideText = document.querySelector(\n        '.js-result-present-add-button-hide-text'\n    );\n\n    addingButton?.addEventListener('click', () => {\n        addingInputs.forEach((input) => {\n            input.classList.toggle(CLASS_HIDDEN);\n        });\n\n        buttonShowText?.classList.toggle(CLASS_HIDDEN);\n        buttonHideText?.classList.toggle(CLASS_HIDDEN);\n    });\n})();\n","(() => {\n    const CLASS_HIDDEN = 'hidden';\n\n    const addingButton = document.querySelector('.js-step-four-add-button');\n    const addingInputs = document.querySelectorAll(\n        '.js-step-four-adding-input'\n    );\n\n    addingButton?.addEventListener('click', () => {\n        addingInputs.forEach((input) => {\n            input.classList.remove(CLASS_HIDDEN);\n        });\n\n        addingButton.classList.add(CLASS_HIDDEN);\n    });\n})();\n","(() => {\n    const CLASS_HIDDEN = 'hidden';\n\n    const tabButtons = document.querySelectorAll('.js-step-two-tab');\n\n    tabButtons.forEach((button) => {\n        button.addEventListener('click', () => {\n            const buttonType = button.dataset.type;\n\n            if (buttonType) {\n                changeInputTelSubText(buttonType);\n                inputNameShowToggle(buttonType);\n                changeLastStep(buttonType);\n            }\n        });\n    });\n\n    function changeInputTelSubText(type) {\n        const inputTelSubText = document.querySelector(\n            '.js-input-tel-sub-text'\n        );\n\n        if (type === 'self' && inputTelSubText) {\n            inputTelSubText.innerHTML =\n                'Ссылка на сертификат и чек о покупке придёт в WhatsApp или SMS';\n        }\n\n        if (type === 'present' && inputTelSubText) {\n            inputTelSubText.innerHTML =\n                'Чек о покупке придёт в WhatsApp или SMS';\n        }\n    }\n\n    function inputNameShowToggle(type) {\n        const inputName = document.querySelector('.js-two-step-input-name');\n\n        if (type === 'self' && inputName) {\n            inputName.classList.remove(CLASS_HIDDEN);\n        }\n\n        if (type === 'present' && inputName) {\n            inputName.classList.add(CLASS_HIDDEN);\n        }\n    }\n\n    function changeLastStep(type) {\n        const lastStep = document.querySelector('.js-step-two-last-step');\n\n        if (type === 'self' && lastStep) {\n            lastStep.innerHTML = '3';\n        }\n\n        if (type === 'present' && lastStep) {\n            lastStep.innerHTML = '5';\n        }\n    }\n})();\n","(() => {\n    const ACTIVE_CLASS = 'active';\n\n    const tabsBlock = document.querySelector('.js-bg-tabs');\n\n    if (tabsBlock) {\n        const buttons = tabsBlock.querySelectorAll('.js-bg-tab-button');\n\n        buttons.forEach((button) => {\n            button.addEventListener('click', () => {\n                resetButtons();\n                button.classList.add(ACTIVE_CLASS);\n            });\n        });\n\n        function resetButtons() {\n            buttons.forEach((button) => {\n                button.classList.remove(ACTIVE_CLASS);\n            });\n        }\n    }\n})();\n","(() => {\n    const ACTIVE_CLASS = 'active';\n\n    const tabsBlock = document.querySelector('.js-tabs');\n\n    if (tabsBlock) {\n        const buttons = tabsBlock.querySelectorAll('.js-tab-button');\n\n        buttons.forEach((button) => {\n            button.addEventListener('click', () => {\n                resetButtons();\n                button.classList.add(ACTIVE_CLASS);\n            });\n        });\n\n        function resetButtons() {\n            buttons.forEach((button) => {\n                button.classList.remove(ACTIVE_CLASS);\n            });\n        }\n    }\n})();\n"]}